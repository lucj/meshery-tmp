# Default values for meshery.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
restartPolicy: Always

image:
  repository: layer5/meshery
  pullPolicy: IfNotPresent

env:
  EVENT: mesheryLocal
  SAAS_BASE_URL: https://meshery.layer5.io
  ADAPTER_URLS: meshery-istio:10000 meshery-linkerd:10001

probe:
  #TODO: Need to confirm the health check path of meshery. 
  livenessProbe:
    enabled: false
  readinessProbe: 
    enabled: false


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:

  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: meshery-service-account

podSecurityContext: {}
  # fsGroup: 2000

annotations:
  kompose.cmd: kompose convert -f ../docker-compose.yaml
  kompose.version: 1.17.0 ()

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.17.0 ()

ingress:
  enabled: false
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.17.0 ()
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}


# Deploy meshery-istio
#
mesheryistio:
  enabled: true
  fullnameOverride: meshery-istio
  

# Deploy meshery-linkerd
# 
mesherylinkerd:
  enabled: true
  fullnameOverride: meshery-linkerd

# If there need the test cases set it as true.
#
testCase:
  enabled: false

# # TODO: There need to confirm that we should deploy the Gateway and VirtualService for Meshery or not. 
# There will be an issue when deploying Meshery before Istio and this could make the deploying fail.
# meshery-gateway
#
mesherygateway:
  enabled: false